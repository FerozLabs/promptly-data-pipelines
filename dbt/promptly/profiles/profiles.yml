promptly:
  outputs:
    postgres:
      dbname: "{{ env_var('DB_NAME', 'postgres')}}"
      host: "{{ env_var('DB_HOST', '127.0.0.1')}}"
      password: "{{ env_var('DB_PASSWORD', 'postgres') }}"
      port: "{{ env_var('DB_PORT', '5432') | int }}"
      schema: "{{ env_var('DBT_SCHEMA', 'promptly') }}"
      threads: 1
      type: postgres
      user: "{{ env_var('DBT_USER', 'postgres') }}"
    trino:
      type: trino
      method: "{{ env_var('TRINO_METHOD', 'none') }}"  # optional, one of {none | ldap | kerberos}
      user: "{{ env_var('TRINO_USER', 'trino') }}"
      password: "{{ env_var('TRINO_PASSWORD', '') }}"  # optional
      database: "{{ env_var('TRINO_CATALOG', 'iceberg') }}"
      host: "{{ env_var('TRINO_HOST', '') }}"
      port: "{{ env_var('TRINO_PORT', '8080') | int }}"
      schema: "{{ env_var('TRINO_SCHEMA', 'default') }}"
      threads: "{{ env_var('TRINO_DBT_THREADS', 1) | int }}"

  target: dev

elementary:
  outputs:
    default:
      type: trino
      method: "{{ env_var('TRINO_METHOD', 'none') }}"  # optional, one of {none | ldap | kerberos}
      user: "{{ env_var('TRINO_USER', 'admin') }}"
      password: "{{ env_var('TRINO_PASSWORD', '') }}"  # optional
      database: "{{ env_var('TRINO_CATALOG', 'iceberg') }}"
      host: "{{ env_var('TRINO_HOST', '') }}"
      port: "{{ env_var('TRINO_PORT', '8080') | int }}"
      schema: "{{ env_var('TRINO_SCHEMA', 'default') }}_elementary"
      threads: "{{ env_var('TRINO_DBT_THREADS', 1) | int }}"
      # password: [optional, used with ldap authentication ]
      # session_properties: [optional, sets Trino session properties used in the connection]

duckdb:
  outputs:
    dev:
      type: duckdb
      path: /tmp/dbt.duckdb
      filesystems:
        - fs: s3
          anon: false
          key: "{{ env_var('S3_ACCESS_KEY_ID') }}"
          secret: "{{ env_var('S3_SECRET_ACCESS_KEY') }}"
          client_kwargs:
            endpoint_url: "{{ env_var('S3_ENDPOINT_URL') }}"
  target: dev