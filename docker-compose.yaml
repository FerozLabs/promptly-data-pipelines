services:
  app:
    container_name: data_app
    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - datanet
    command: sleep infinity

  postgres:
    image: postgres:16
    container_name: nessie_postgres
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    ports:
      - "5433:5432"
    networks:
      - datanet

  postgres_medical:
    image: postgres:latest
    container_name: postgres_medical
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    ports:
      - "5434:5432"
    networks:
      - datanet
        # Enable logical replication settings for CDC
    command: >
      postgres
      -c wal_level=logical
      -c max_replication_slots=4
      -c max_wal_senders=4


  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_REGION_NAME: us-west-1
    ports:
      - "9000:9000"
      - "9001:9001" # Console web
    networks:
      - datanet

    

  nessie:
    image: ghcr.io/projectnessie/nessie:0.104.5
    container_name: nessie
    depends_on:
      - postgres
      - minio
    environment:
      AWS_DEFAULT_REGION: us-west-1
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      NESSIE_SERVER_AUTHENTICATION_ENABLED: "false"
      NESSIE_VERSION_STORE_TYPE: JDBC
      NESSIE_VERSION_STORE_PERSIST_JDBC_DATASOURCE: postgresql
      QUARKUS_DATASOURCE_POSTGRESQL_JDBC_URL: jdbc:postgresql://nessie_postgres:5432/test
      QUARKUS_DATASOURCE_POSTGRESQL_USERNAME: test
      QUARKUS_DATASOURCE_POSTGRESQL_PASSWORD: test
      NESSIE_CATALOG_DEFAULT_BRANCH: main
      NESSIE_CATALOG_DEFAULT_WAREHOUSE: iceberg
      NESSIE_CATALOG_WAREHOUSES_ICEBERG_LOCATION: s3://iceberg/
      NESSIE_CATALOG_SERVICE_S3_DEFAULT_OPTIONS_ENDPOINT: http://minio:9000
      NESSIE_CATALOG_SERVICE_S3_DEFAULT_OPTIONS_REGION: us-west-1
      NESSIE_CATALOG_SERVICE_S3_DEFAULT_OPTIONS_PATH_STYLE_ACCESS: "true"
      NESSIE_CATALOG_SERVICE_S3_DEFAULT_OPTIONS_ACCESS_KEY: urn:nessie-secret:quarkus:nessie.catalog.secrets.access-key
      NESSIE_CATALOG_SECRETS_ACCESS_KEY_NAME: minioadmin
      NESSIE_CATALOG_SECRETS_ACCESS_KEY_SECRET: minioadmin
      NESSIE_CATALOG_SECRETS_REGION_NAME: us-west-1
    ports:
      - "19120:19120"
    networks:
      - datanet

  trino:
    image: trinodb/trino:475
    container_name: trino
    depends_on:
      - nessie
      - minio
    environment:
      CATALOG_MANAGEMENT: dynamic
    ports:
      - "8080:8080"
    networks:
      - datanet

    volumes:
      - ./infra/trino/etc/catalog:/etc/trino/catalog
      - ./infra/trino/etc/kafka-table-descriptions:/etc/trino/kafka-table-descriptions


  broker:
    image: apache/kafka:4.1.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - datanet
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_BROKER_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9999:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9092
    networks:
      - datanet

  debezium:
    image: quay.io/debezium/connect:3.2
    platform: linux/amd64
    container_name: debezium
    depends_on:
      - broker
      - postgres_medical
    environment:
      BOOTSTRAP_SERVERS: broker:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_config
      OFFSET_STORAGE_TOPIC: debezium_offsets
      STATUS_STORAGE_TOPIC: debezium_status
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    ports:
      - "8083:8083"
    networks:
      - datanet


networks:
  datanet:
    driver: bridge

